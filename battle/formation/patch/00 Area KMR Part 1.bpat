@ $FormationTable
{
	$SJIS_80220FD8 00000002 $Formation_00 $Stage_StarHaven 00000000
	$SJIS_80220FCC 00000002 $Formation_01 $Stage_8022066C 00000000
	$SJIS_80220FC0 00000003 $Formation_02 $Stage_8022066C 00000000
	$SJIS_80220FA8 00000002 $Formation_03 $Stage_8022066C 00000000
	$SJIS_80220F9C 00000004 $Formation_04 $Stage_8022066C 00000000
	$SJIS_80220F84 00000002 $Formation_05 $Stage_8022066C 00000000
	$SJIS_80220F58 00000004 $Formation_06 $Stage_8022066C 00000000
	$SJIS_80220F48 00000001 $Formation_07 $Stage_8022066C 00000000
	$SJIS_80220F38 00000002 $Formation_08 $Stage_8022066C 00000000
	$SJIS_80220F28 00000003 $Formation_09 $Stage_8022066C 00000000
	$SJIS_80220F18 00000001 $Formation_0A $Stage_8022066C 00000000
	$SJIS_80220F00 00000002 $Formation_0B $Stage_8022066C 00000000
	00000000 00000000 00000000 00000000 00000000
}

@ $Formation_00
{
	$GourmetGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$ThickGuy 00000002 00000009 00000000 00000000 00000000 00000000
}

#new:Actor $GourmetGuy
{
	% stats
	[Index]         D4b
	[Level]         5`b
	[MaxHP]         14`b
	[Coins]         1`b
	[Flags]       00000000
	[StatusTable] $StatusTable_GourmetGuy
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_GourmetGuy
	[Script]      $Script_Init_GourmetGuy
	% move effectiveness
	[Escape]       0`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_GourmetGuy
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_GourmetGuy
{
	00800000 01000000 001400FF $IdleAnimations_GourmetGuyNormal $DefenseTable_GourmetGuy 00000000 00000000 00F60000 00000000
}

#new:Script $Script_Init_GourmetGuy
{
	Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_GourmetGuy )
	Call  BindIdle  ( .Actor:Self $Script_Idle_GourmetGuy )
	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_GourmetGuy )
  Call  BindNextTurn ( .Actor:Self $Script_NextTurn_GourmetGuy )
	Return
	End
}

#new:Script $Script_Idle_GourmetGuy
{
	Label  A
	Call RandInt ( 60` *Var0 )
	Add *Var0 60`
	Wait *Var0
	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
	Sub   *Var0  0000000A
	Call  UseIdleAnimation ( .Actor:Self .False )
	Call  SetAnimation ( .Actor:Self 00000001 003B0002 )
	Call  SetGoalPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  RunToGoal ( .Actor:Self 5` .True )
	Call  SetAnimation ( .Actor:Self 00000001 003B0017 )
	Wait 28`
	Call  SetAnimation ( .Actor:Self 00000001 003B0001 )
	Wait 8`
	Call  SetAnimation ( .Actor:Self 00000001 003B0002 )
	Call  SetGoalToHome ( .Actor:Self )
	Call  RunToGoal ( .Actor:Self 5` .True )
	Call  UseIdleAnimation ( .Actor:Self .True )
	Goto  A
	Return
	End
}

#new:Script $Script_TakeTurn_GourmetGuy
{
  Call GetActorHP ( .Actor:Self *Var0 )
  If *Var0 <= 5`
    Call UseIdleAnimation ( .Actor:Self .False )
    Call EnableIdleScript  ( .Actor:Self 00000000 )
    Call UseIdleAnimation ( .Actor:Enemy1 .False )
    Call EnableIdleScript  ( .Actor:Enemy1 00000000 )
    Call ActorSpeak ( 002F0002 .Actor:Self 00000001 003B0011 003B0001 )

    Call SetJumpAnimations ( .Actor:Self 00000001 003B0009 003B0009 003B0009 )
    Call SetActorJumpGravity ( .Actor:Self *Fixed[1.5] )
    Call GetActorPos ( .Actor:Self *VarA *VarB *VarC )
    Add *VarA 150`
    Add *VarB 150`
    Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
    Call SetActorPos ( .Actor:Enemy1 *VarA *VarB *VarC )
    Call JumpToGoal ( .Actor:Self 15` .True .True .False )
    Wait 15`

    Call SetActorFlagBits ( .Actor:Enemy1 00200004 .False )
    Call SetPartFlagBits ( .Actor:Enemy1 00000001 00020001 .False )
    Call SetPartFlagBits ( .Actor:Enemy1 00000001 00800000 .True )

    Call GetActorPos ( .Actor:Self *VarA *VarB *VarC )
    Sub *VarA 25`
    Sub *VarB 25`
    Call PlaySoundAtActor ( .Actor:Enemy1 00000242 )
    Call PlayEffect ( ~FX:EnergyOut:LongStreaksSpin *VarA *VarB *VarC 3` 60` )
    Wait 60`

    Call SetActorFlagBits ( .Actor:Self 00204004 .True )
    Call SetPartFlagBits ( .Actor:Self 00000001 00020001 .True )
    Call SetActorFlagBits ( .Actor:Self 00400000 .True )

    Call SetJumpAnimations ( .Actor:Enemy1 00000001 00C1000B 00C1000B 00C1000B )
    Call SetActorJumpGravity ( .Actor:Enemy1 *Fixed[1.5] )
    Call GetActorPos ( .Actor:Enemy1 *VarA *VarB *VarC )
    Sub *VarA 150`
    Sub *VarB 150`
    Call SetGoalPos ( .Actor:Enemy1 *VarA *VarB *VarC )
    Call JumpToGoal ( .Actor:Enemy1 15` .True .True .False )
    Call SetAnimation ( .Actor:Enemy1 00000001 00C10001 )
    Call ActorSpeak ( 002F0003 .Actor:Enemy1 00000001 00C10004 00C10001 )
    Call EnableIdleScript  ( .Actor:Enemy1 00000001 )
    Call UseIdleAnimation ( .Actor:Enemy1 .True )
    Call CancelEnemyTurn ( 00000001 )
    Return
  EndIf
  ExecWait $Script_Attack_Slash
	Return
	End
}

#new:Script $Script_Attack_Slash
{
  Call UseIdleAnimation ( .Actor:Self .False )
  Call EnableIdleScript  ( .Actor:Self 00000000 )
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  Call SetAnimation ( .Actor:Self 00000001 003B0002 )
  Call SetActorSpeed ( .Actor:Self *Fixed[2.5] )
  Call GetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Add *VarA 15`
  Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call RunToGoal ( .Actor:Self 0` .True )
  Call GetActorVar ( .Actor:Self 00000002 *Var0 )
  If *Var0 == 00000002
    Set *Var1 2`
  Else
    Set *Var1 1`
  EndIf
  Loop *Var1
    Wait 5`
    Call SetAnimation ( .Actor:Self 00000001 003B0016 )
    Wait 18`
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
    Call SetAnimation ( .Actor:Self 00000001 003B0001 )
  EndLoop
    Call UseBattleCamPreset ( 00000002 )
    Call SetGoalToHome ( .Actor:Self )
    Call SetAnimation ( .Actor:Self 00000001 003B0002 )
    Call RunToGoal ( .Actor:Self 15` .True )
    Call EnableIdleScript  ( .Actor:Self 00000001 )
    Call UseIdleAnimation ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_HandleEvent_GourmetGuy
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
          Call GetActorVar ( .Actor:Self 00000001 *Var1 )
          If *Var1 == 00000000
            Call SetActorVar ( .Actor:Self 00000001 00000001 )
          EndIf
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  003B000C
   9C:  		ExecWait  DoNormalHit
            If *MF_UsedHammer == .True
              Call GetActorVar ( .Actor:Self 00000002 *Var1 )
              If *Var1 == 00000000
                Call SetActorVar ( .Actor:Self 00000002 00000001 )
              EndIf
            EndIf
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  003B000C
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  003B000E
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_NextTurn_GourmetGuy
{
  If *MF_CancelledJump == .False
    ExecWait $Script_JumpDenial_Normal
  EndIf
  Call GetActorVar ( .Actor:Self 00000002 *Var0 )
  If *Var0 == 00000001
    ExecWait $Script_HammerDenial_Normal
  EndIf
  Return
  End
}

#new:Script $Script_JumpDenial_Normal
{
  
  Call GetActorVar ( .Actor:Self 00000001 *Var0 )
  If *Var0 == 00000001
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseBattleCamPreset    ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver     (  30` )
    Wait  30`
    Call ActorSpeak ( 002F0007 .Actor:Self 00000001 003B0011 003B0001 )
    Call UseBattleCamPreset ( 00000002 )
    Set *MF_CancelledJump .True
    Call SetActorVar ( .Actor:Self 00000001 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
  EndIf
  Return
  End
}

#new:Script $Script_HammerDenial_Normal
{
  Call GetActorVar ( .Actor:Self 00000002 *Var0 )
  If *Var0 == 00000001
    Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
    Call  UseBattleCamPreset    ( 0000000E )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver     (  30` )
    Wait  30`
    Call ActorSpeak ( 002F0008 .Actor:Self 00000001 003B0011 003B0001 )
    Call UseBattleCamPreset ( 00000002 )
    Call SetActorVar ( .Actor:Self 00000002 00000002 )
    Call  EnableIdleScript  ( .Actor:Self 00000001 )
    Call  UseIdleAnimation  ( .Actor:Self .True )
  EndIf
  Return
  End
}

#new:IdleAnimations $IdleAnimations_GourmetGuyNormal
{
	.Status:Normal    003B0001
	.Status:End
}

#new:DefenseTable $DefenseTable_GourmetGuy
{
	.Element:Normal 00000000
	.Element:End
}

%
% THICKNESS BEGIN
%

#new:Actor $ThickGuy
{
	% stats
	[Index]         D4b
	[Level]         5`b
	[MaxHP]         28`b
	[Coins]         0`b
	[Flags]       00200004
	[StatusTable] $StatusTable_ThickGuy
	% ai
	[PartsCount]    5`s
	[PartsTable]  $PartsTable_ThickGuy
	[Script]      $Script_Init_ThickGuy
	% move effectiveness
	[Escape]       0`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         64`b  64`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:StatusTable $StatusTable_ThickGuy
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     100`
	.Status:Poison    100`
	.Status:Frozen    100`
	.Status:Dizzy     100`
	.Status:Fear      100`
	.Status:Static    100`
	.Status:Paralyze  100`
	.Status:Shrink    100`
	.Status:Stop      100`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_ThickGuy
{
	00020001 01000000 004000FF $IdleAnimations_ThickGuy $DefenseTable_ThickGuy 00000000 00000000 00F60000 00000000
	00120001 02000000 000000FF $IdleAnimations_Flour 00000000 00000000 00000000 00F00000 00000000
	00120001 03000000 000000FF $IdleAnimations_Egg 00000000 00000000 00000000 00F00000 00000000
	00120001 04000000 000000FF $IdleAnimations_Sugar 00000000 00000000 00000000 00F00000 00000000
	00120001 05000000 000000FF $IdleAnimations_Strawberry 00000000 00000000 00000000 00F00000 00000000
}

#new:Script $Script_Init_ThickGuy
{
  Call  SetActorPos ( .Actor:Self 45` 0` -10` )
  Call  ForceHomePos ( .Actor:Self 45` 0` -10` )
  Call  HPBarToHome ( .Actor:Self )
  Call SetActorVar ( .Actor:Self 00000001 00000000 )
  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_ThickGuy )
	Call  BindIdle  ( .Actor:Self $Script_Idle_ThickGuy )
	Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_ThickGuy )
	Return
	End
}

#new:Script $Script_Idle_ThickGuy
{
  Label A
  Wait 1`
  Goto A
	Return
	End
}

#new:Script $Script_TakeTurn_ThickGuy
{
  Call GetActorHP ( .Actor:Self *Var0 )
  If *Var0 <= 5`
    Return
  EndIf
  Call GetActorVar ( .Actor:Self 00000001 *Var0 )
  Switch *Var0
    Case == 0`
      ExecWait $Script_Attack_IngredientSpit
      Call SetActorVar ( .Actor:Self 00000001 00000003 )
    Case > 0`
      Call RandInt ( 1` *Var0 )
      If *Var0 == 1`
        ExecWait $Script_Attack_Stomp
      Else
        ExecWait $Script_Attack_Chewing
      EndIf
      Call GetActorVar ( .Actor:Self 00000001 *Var0 )
      Sub *Var0 1`
      Call SetActorVar ( .Actor:Self 00000001 *Var0 )
    EndCaseGroup
  EndSwitch
  Return
  End
}

#new:Script $Script_Attack_IngredientSpit
{
  Call  UseIdleAnimation  ( .Actor:Self .False )
  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  %
  % WALK BACKWARS
  %
  Call GetActorPos ( .Actor:Self *VarA *VarB *VarC )
  Add *VarA 68`
  Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Call SetActorSpeed ( .Actor:Self *Fixed[1.0] )
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call RunToGoal ( .Actor:Self 0` .True )
  Call SetAnimation ( .Actor:Self 00000001 00C1000E )
  Call PlaySoundAtActor ( .Actor:Self 00000288 )
  %
  % SUCKLONE SUCKING IN INGREDIENTS
  %
  Set     *Var0 ~Model:btl_bt01:Sucklone
  Set     *Var1 1 % unfade
  Set     *Var2 15` % speed
  Exec    $Script_UpdateModelAlpha
  Exec $Script_FlourToGourmet
  Wait 30`
  Exec $Script_EggToGourmet
  Wait 30`
  Exec $Script_SugarToGourmet
  Wait 30`
  Exec $Script_StrawberryToGourmet
  Wait 185`
  Set     *Var0 ~Model:btl_bt01:Sucklone
  Set     *Var1 0 % fade
  Set     *Var2 15` % speed
  Exec    $Script_UpdateModelAlpha
  Thread
    Loop  4`
      Call  PlaySoundAtActor  ( .Actor:Player 00002095 )
      Wait  10`
    EndLoop
  EndThread
  Call SetAnimation ( .Actor:Self 00000001 00C10005 )
  Wait 40`
  %
  % SPITTING FLOUR AT MARIO
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Wait 12`
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  Call PlaySoundAtActor ( .Actor:Self 0000029A )
  Call SetAnimation ( .Actor:Self 00000001 00C1000E )
  Call SetPartRotation ( .Actor:Self 00000002 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 20`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000002 0` 0` *VarA  )
      Wait 1`
    EndLoop
  EndThread
  Call GetActorPos ( .Actor:Player *Var1 *Var2 *Var3 )
  Add *Var2 40`
  Thread
    Wait 20`
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  EndThread
  Call FlyPartTo ( .Actor:Self 00000002 *Var1 *Var2 *Var3 20` *Fixed[0.5] .Easing:Linear )
  Sub *Var1 90`
  Call SetPartJumpGravity ( .Actor:Self 00000002 *Fixed[1.0] )
  Call JumpPartTo ( .Actor:Self 00000002 *Var1 *Var2 *Var3 15` .False )
  Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  %
  % SPITTING EGG AT MARIO
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Wait 12`
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  Call PlaySoundAtActor ( .Actor:Self 0000029A )
  Call SetAnimation ( .Actor:Self 00000001 00C1000E )
  Call SetPartRotation ( .Actor:Self 00000003 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 20`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000003 0` 0` *VarA  )
      Wait 1`
    EndLoop
  EndThread
  Call GetActorPos ( .Actor:Player *Var1 *Var2 *Var3 )
  Add *Var2 40`
  Thread
    Wait 20`
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  EndThread
  Call FlyPartTo ( .Actor:Self 00000003 *Var1 *Var2 *Var3 20` *Fixed[0.5] .Easing:Linear )
  Sub *Var1 90`
  Call SetPartJumpGravity ( .Actor:Self 00000003 *Fixed[1.0] )
  Call JumpPartTo ( .Actor:Self 00000003 *Var1 *Var2 *Var3 15` .False )
  Call SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  %
  % SPITTING SUGAR AT MARIO, DIZZY FOR 1 TURN IF UNBLOCKED
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Wait 12`
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  Call PlaySoundAtActor ( .Actor:Self 0000029A )
  Call SetAnimation ( .Actor:Self 00000001 00C1000E )
  Call SetPartRotation ( .Actor:Self 00000004 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 20`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000004 0` 0` *VarA  )
      Wait 1`
    EndLoop
  EndThread
  Call GetActorPos ( .Actor:Player *Var1 *Var2 *Var3 )
  Add *Var2 40`
  Thread
    Wait 20`
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Dizzy:1:100` 00000002 00000020 )
  EndThread
  Call FlyPartTo ( .Actor:Self 00000004 *Var1 *Var2 *Var3 20` *Fixed[0.5] .Easing:Linear )
  Sub *Var1 90`
  Call SetPartJumpGravity ( .Actor:Self 00000004 *Fixed[1.0] )
  Call JumpPartTo ( .Actor:Self 00000004 *Var1 *Var2 *Var3 15` .False )
  Call SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  %
  % SPITTING STRAWBERRY AT MARIO
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Wait 12`
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  Call PlaySoundAtActor ( .Actor:Self 0000029A )
  Call SetAnimation ( .Actor:Self 00000001 00C1000E )
  Call SetPartRotation ( .Actor:Self 00000005 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000005 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 20`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000005 0` 0` *VarA  )
      Wait 1`
    EndLoop
  EndThread
  Call GetActorPos ( .Actor:Player *Var1 *Var2 *Var3 )
  Add *Var2 40`
  Thread
    Wait 20`
    Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  EndThread
  Call FlyPartTo ( .Actor:Self 00000005 *Var1 *Var2 *Var3 20` *Fixed[0.5] .Easing:Linear )
  Sub *Var1 90`
  Call SetPartJumpGravity ( .Actor:Self 00000005 *Fixed[1.0] )
  Call JumpPartTo ( .Actor:Self 00000005 *Var1 *Var2 *Var3 15` .False )
  Call SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
  %
  % WALK TO HOME
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Call SetGoalToHome ( .Actor:Self )
  Call SetActorSpeed ( .Actor:Self *Fixed[1.0] )
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call RunToGoal ( .Actor:Self 0` .True )
  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  Call  UseIdleAnimation  ( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_FlourToGourmet
{
  Set *Var1 -295`
  Set *Var2 106`
  Set *Var3 0`
  Call SetPartPos ( .Actor:Self 00000002 *Var1 *Var2 *Var3 )
  Call SetPartRotation ( .Actor:Self 00000002 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 145`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000002 *VarA  0` 0` )
      Wait 1`
    EndLoop
  EndThread
  Call  LoadPath  ( 145` $VectorList_FlourPath 6` .Easing:Linear )
  Loop
    Call  GetNextPathPos ( )
    Call SetPartPos ( .Actor:Self 00000002 *Var1 *Var2 *Var3 )
    Wait  1`
    If *Var0 == 0`
      BreakLoop
    EndIf
	EndLoop
  Call SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  Return
  End
}

#new:Script $Script_EggToGourmet
{
  Set *Var1 -295`
  Set *Var2 50`
  Set *Var3 55`
  Call SetPartPos ( .Actor:Self 00000003 *Var1 *Var2 *Var3 )
  Call SetPartRotation ( .Actor:Self 00000003 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000003 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 145`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000003 *VarA  0` 0` )
      Wait 1`
    EndLoop
  EndThread
  Call  LoadPath  ( 145` $VectorList_EggPath 6` .Easing:Linear )
  Loop
    Call  GetNextPathPos ( )
    Call SetPartPos ( .Actor:Self 00000003 *Var1 *Var2 *Var3 )
    Wait  1`
    If *Var0 == 0`
      BreakLoop
    EndIf
	EndLoop
  Call SetPartFlagBits   ( .Actor:Self 00000003 00000001 .True )
  Return
  End
}

#new:Script $Script_SugarToGourmet
{
  Set *Var1 -295`
  Set *Var2 -7`
  Set *Var3 0`
  Call SetPartPos ( .Actor:Self 00000004 *Var1 *Var2 *Var3 )
  Call SetPartRotation ( .Actor:Self 00000004 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000004 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 145`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000004 *VarA  0` 0` )
      Wait 1`
    EndLoop
  EndThread
  Call  LoadPath  ( 145` $VectorList_SugarPath 6` .Easing:Linear )
  Loop
    Call  GetNextPathPos ( )
    Call SetPartPos ( .Actor:Self 00000004 *Var1 *Var2 *Var3 )
    Wait  1`
    If *Var0 == 0`
      BreakLoop
    EndIf
	EndLoop
  Call SetPartFlagBits   ( .Actor:Self 00000004 00000001 .True )
  Return
  End
}

#new:Script $Script_StrawberryToGourmet
{
  Set *Var1 -295`
  Set *Var2 50`
  Set *Var3 -55`
  Call SetPartPos ( .Actor:Self 00000005 *Var1 *Var2 *Var3 )
  Call SetPartRotation ( .Actor:Self 00000005 0` 0` 0` )
  Call SetPartFlagBits   ( .Actor:Self 00000005 00000001 .False )
  Set *VarA 0`
  Thread
    Loop 145`
      Add *VarA 5`
      Call SetPartRotation ( .Actor:Self 00000005 *VarA  0` 0` )
      Wait 1`
    EndLoop
  EndThread
  Call  LoadPath  ( 145` $VectorList_StrawberryPath 6` .Easing:Linear )
  Loop
    Call  GetNextPathPos ( )
    Call SetPartPos ( .Actor:Self 00000005 *Var1 *Var2 *Var3 )
    Wait  1`
    If *Var0 == 0`
      BreakLoop
    EndIf
	EndLoop
  Call SetPartFlagBits   ( .Actor:Self 00000005 00000001 .True )
  Return
  End
}

#new:VectorList $VectorList_FlourPath
{
  -295.000000 106.000000 0.000000
  -235.000000 46.000000 -46.000000
  -135.000000 17.000000 -1.000000
  -35.000000 46.000000 17.000000
  65.000000 54.000000 -1.000000
  90.000000 35.000000 3.000000
}

#new:VectorList $VectorList_EggPath
{
  -295.000000 50.000000 55.000000
  -235.000000 97.000000 -4.000000
  -135.000000 50.000000 -32.000000
  -35.000000 31.000000 -4.000000
  65.000000 50.000000 3.000000
  90.000000 35.000000 3.000000
}

#new:VectorList $VectorList_SugarPath
{
  -295.000000 -7.000000 0.000000
  -235.000000 50.000000 46.000000
  -135.000000 84.000000 -1.000000
  -35.000000 50.000000 -19.000000
  65.000000 46.000000 -1.000000
  90.000000 35.000000 3.000000
}

#new:VectorList $VectorList_StrawberryPath
{
  -295.000000 50.000000 -55.000000
  -235.000000 3.000000 4.000000
  -135.000000 50.000000 32.000000
  -35.000000 69.000000 4.000000
  65.000000 50.000000 -5.000000
  90.000000 35.000000 3.000000
}

#new:Script $Script_Attack_Stomp
{
  Call UseIdleAnimation ( .Actor:Self .False )
  Call EnableIdleScript  ( .Actor:Self 00000000 )
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  %
  % JUMPS ON MARIO
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call SetActorSpeed ( .Actor:Self *Fixed[2.5] )
  Call GetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Add *VarA 40`
  Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call RunToGoal ( .Actor:Self 0` .True )
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Wait 15`
  Call SetGoalToTarget ( .Actor:Self )
  Call GetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Set *VarB 0`
  Add *VarC 15`
  Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Call SetActorJumpGravity ( .Actor:Self *Fixed[1.75] )
  Call JumpToGoal ( .Actor:Self 15` .True .True .True )
  Call SetGoalToTarget ( .Actor:Self )
  Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  Thread
    Call PlaySoundAtActor ( .Actor:Self 0000028E )
    Wait 30`
    Call StopSound ( 0000028E )
  EndThread
  Thread
    Call ShakeCam ( .Cam:Battle 0` 30` 2` )
  EndThread
  Call GetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Set *VarB 0`
  Sub *VarA 15`
  Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call SetActorJumpGravity ( .Actor:Self *Fixed[0.5] )
  Call JumpToGoal ( .Actor:Self 15` .False .True .False )
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Call UseBattleCamPreset ( 00000002 )
  Call SetGoalToHome ( .Actor:Self )
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call RunToGoal ( .Actor:Self 15` .True )
  Call EnableIdleScript  ( .Actor:Self 00000001 )
  Call UseIdleAnimation ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_Attack_Chewing
{
  Call UseIdleAnimation ( .Actor:Self .False )
  Call EnableIdleScript  ( .Actor:Self 00000000 )
  Call EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  %
  % WALK UP TO MARIO
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call SetActorSpeed ( .Actor:Self *Fixed[2.5] )
  Call GetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Add *VarA 15`
  Sub *VarC 20`
  Call SetGoalPos ( .Actor:Self *VarA *VarB *VarC )
  Call  UseBattleCamPreset    ( 0000003F )
  Call  BattleCamTargetActor  ( .Actor:Self )
  Call RunToGoal ( .Actor:Self 0` .True )
  %
  % EAT UP THAT GUY
  %
  Call SetAnimation ( .Actor:Self 00000001 00C1000C )
  Wait 15`
  Call SetAnimation ( .Actor:Self 00000001 00C10013 )
  Call UseIdleAnimation ( .Actor:Player .False )
  Call GetHomePos ( .Actor:Player *VarA *VarB *VarC )
  Add *VarA 10`
  Add *VarB 20`
  Call SetGoalPos ( .Actor:Player *VarA *VarB *VarC )
  Call SetAnimation ( .Actor:Player 00000001 0003000C )
  Call FlyToGoal ( .Actor:Player 15` *Fixed[1.0] .Easing:Linear )
  Add *VarA 15`
  Add *VarB 5`
  Sub *VarC 15`
  Call SetGoalPos ( .Actor:Player *VarA *VarB *VarC )
  Call SetAnimation ( .Actor:Player 00000001 0003000C )
  Call FlyToGoal ( .Actor:Player 15` *Fixed[1.0] .Easing:Linear )
  Call UseBattleCamPreset ( 00000002 )
  Call SetActorPos ( .Actor:Player 0` -1000` 0` )
  %
  %GO BACK HOME NERD
  %
  Call SetGoalToHome ( .Actor:Self )
  Call SetActorSpeed ( .Actor:Self *Fixed[2.5] )
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call RunToGoal ( .Actor:Self 0` .True )
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Wait 10`
  Call SetAnimation ( .Actor:Self 00000001 00C1000E )
  Call GetHomePos ( .Actor:Self *VarA *VarB *VarC )
  Add *VarB 20`
  Add *VarC 10`
  Call SetActorPos ( .Actor:Player *VarA *VarB *VarC )
  %
  %TIME TO SPIT EM OUT
  %
  % Call 802535B4 ( .False )
  Call SetAnimation ( .Actor:Player 00000001 00030002 )
  Set *Var1 0`
  Thread
    Loop 36`
      Add *Var1 20`
      Call SetActorRotation ( .Actor:Player 0` 0` *Var1 )
      Wait 1`
    EndLoop
  EndThread
  Call SetGoalToHome ( .Actor:Player )
  Call SetActorJumpGravity ( .Actor:Self *Fixed[1.5] )
  Call JumpToGoal ( .Actor:Player 36` .False .True .False )
  Call SetTargetActor ( .Actor:Self .Actor:Player )
  Call SetGoalToTarget ( .Actor:Self )
  Wait 2`
  Call EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  % Call 802535B4 ( .True )
  %
  %RESET ANIMS
  %
  Call SetAnimation ( .Actor:Self 00000001 00C10001 )
  Call SetGoalToHome ( .Actor:Self )
  Call SetAnimation ( .Actor:Self 00000001 00C10002 )
  Call RunToGoal ( .Actor:Self 15` .True )
  Call EnableIdleScript  ( .Actor:Self 00000001 )
  Call UseIdleAnimation ( .Actor:Self .True )
  Return
  End
}

#new:Script $Script_HandleEvent_ThickGuy
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00C10008
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00260009
   DC:  		SetConst  *Var2  0026000A
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00260009
  124:  		SetConst  *Var2  0026000A
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0026000A
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00260005
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00260005
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00260006
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  0026000E
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00260005
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00260001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  0026000E
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00260006
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00260001
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00C10008
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00C10007
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00260003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00260001
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00260003
  5C4:  		SetConst  *Var2  00260005
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00260003
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00260005
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:IdleAnimations $IdleAnimations_ThickGuy
{
	.Status:Normal    00C10001
	.Status:End
}

#new:DefenseTable $DefenseTable_ThickGuy
{
	.Element:Normal 00000000
	.Element:End
}

#new:IdleAnimations $IdleAnimations_Flour
{
	.Status:Normal    00C1000F
	.Status:End
}

#new:IdleAnimations $IdleAnimations_Egg
{
	.Status:Normal    00C10010
	.Status:End
}

#new:IdleAnimations $IdleAnimations_Sugar
{
	.Status:Normal    00C10011
	.Status:End
}

#new:IdleAnimations $IdleAnimations_Strawberry
{
	.Status:Normal    00C10012
	.Status:End
}

#new:Stage $Stage_StarHaven
{
	"hos_tex"
	"btl_bt01_shape"
	"btl_bt01_hit"
	$Script_BeforeBattle_GourmetGuy
	$Script_AfterBattle_80220650
	00000000
	00000000 %ForegroundModelList
	00000000
	00000000
	00000000
}

#new:Script $Script_BeforeBattle_GourmetGuy
{
  Exec $Script_SetupTexturePan
  Set     *Var0 ~Model:btl_bt01:Sucklone
  Set     *Var1 0 % fade
  Set     *Var2 1` % speed
  Exec    $Script_UpdateModelAlpha
	Return
	End
}

#new:Script $Script_SetupTexturePan
{
	Call     802C9000 	( ~Model:btl_bt01:Sucklone 0 )
	Thread
		Set  *Var[0] 0
		Set  *Var[1] 5DC
		Set  *Var[2] 7D0
		Set  *Var[3] 0
		Set  *Var[4] 0
		Set  *Var[5] 0
		Set  *Var[6] 0
		Set  *Var[7] 0
		Set  *Var[8] 0
		Set  *Var[9] 0
		Set  *Var[A] 0
		Set  *Var[B] 0
		Set  *Var[C] 0
		Exec $Script_TexturePan_Update
	EndThread
	Return
	End
}

#new:Script $Script_TexturePan_Update
{
    SetGroup  00000000
    If  *Var[5]  ==  00000001
        If  *Var[6]  ==  00000001
            If  *Var[7]  ==  00000001
                If  *Var[8]  ==  00000001
                    Call  $Function_TexturePan_Simple ( )
                    Return
                EndIf
            EndIf
        EndIf
    EndIf
    Call  $Function_TexturePan_Complex ( )
    Return
    End
}

#new:Function $Function_TexturePan_Simple
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    SW          RA, 14 (SP)
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o30
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o40
    ADDU        V0, V1, V0
    .o30
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o44
    SUBU        V0, V1, A0
    .o40
    SW          V0, A8 (S0)
    .o44
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o64
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o74
    ADDU        V0, V1, V0
    .o64
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o78
    SUBU        V0, V1, A0
    .o74
    SW          V0, AC (S0)
    .o78
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o98
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA8
    ADDU        V0, V1, V0
    .o98
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oAC
    SUBU        V0, V1, A0
    .oA8
    SW          V0, B0 (S0)
    .oAC
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oCC
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oDC
    ADDU        V0, V1, V0
    .oCC
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE0
    SUBU        V0, V1, A0
    .oDC
    SW          V0, B4 (S0)
    .oE0
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}

#new:Function $Function_TexturePan_Complex
{
    ADDIU       SP, SP, FFE8
    SW          S0, 10 (SP)
    COPY        S0, A0
    BEQ         A1, R0, .o24
    SW          RA, 14 (SP)
    SW          R0, 70 (S0)
    SW          R0, 74 (S0)
    SW          R0, 78 (S0)
    SW          R0, 7C (S0)
    .o24
    LW          V0, 70 (S0)
    BNE         V0, R0, .o64
    NOP
    LW          V1, A8 (S0)
    LW          V0, 88 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o50
    SW          V1, A8 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o60
    ADDU        V0, V1, V0
    .o50
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o64
    SUBU        V0, V1, A0
    .o60
    SW          V0, A8 (S0)
    .o64
    LW          V0, 74 (S0)
    BNE         V0, R0, .oA4
    NOP
    LW          V1, AC (S0)
    LW          V0, 8C (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o90
    SW          V1, AC (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oA0
    ADDU        V0, V1, V0
    .o90
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oA4
    SUBU        V0, V1, A0
    .oA0
    SW          V0, AC (S0)
    .oA4
    LW          V0, 78 (S0)
    BNE         V0, R0, .oE4
    NOP
    LW          V1, B0 (S0)
    LW          V0, 90 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .oD0
    SW          V1, B0 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .oE0
    ADDU        V0, V1, V0
    .oD0
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .oE4
    SUBU        V0, V1, A0
    .oE0
    SW          V0, B0 (S0)
    .oE4
    LW          V0, 7C (S0)
    BNE         V0, R0, .o124
    NOP
    LW          V1, B4 (S0)
    LW          V0, 94 (S0)
    ADDU        V1, V1, V0
    BGEZ        V1, .o110
    SW          V1, B4 (S0)
    LUI         V0, 2
    BEQ         R0, R0, .o120
    ADDU        V0, V1, V0
    .o110
    LUI         A0, 2
    SLT         V0, A0, V1
    BEQ         V0, R0, .o124
    SUBU        V0, V1, A0
    .o120
    SW          V0, B4 (S0)
    .o124
    LW          A0, 84 (S0)
    JAL         8011BC1C
    LW          A1, A8 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC34
    LW          A1, AC (S0)
    LW          A0, 84 (S0)
    JAL         8011BC4C
    LW          A1, B0 (S0)
    LW          A0, 84 (S0)
    JAL         8011BC64
    LW          A1, B4 (S0)
    LW          V0, 70 (S0)
    LW          V1, 78 (S0)
    LW          A0, 98 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 70 (S0)
    LW          V0, 74 (S0)
    ADDIU       V1, V1, 1
    SW          V1, 78 (S0)
    LW          V1, 70 (S0)
    ADDIU       V0, V0, 1
    SW          V0, 74 (S0)
    LW          V0, 7C (S0)
    SLT         V1, V1, A0
    ADDIU       V0, V0, 1
    BNE         V1, R0, .o198
    SW          V0, 7C (S0)
    SW          R0, 70 (S0)
    .o198
    LW          V0, 74 (S0)
    LW          V1, 9C (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1AC
    SW          R0, 74 (S0)
    .o1AC
    LW          V0, 78 (S0)
    LW          V1, A0 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1C0
    SW          R0, 78 (S0)
    .o1C0
    LW          V0, 7C (S0)
    LW          V1, A4 (S0)
    SLT         V0, V0, V1
    BEQL        V0, R0, .o1D4
    SW          R0, 7C (S0)
    .o1D4
    LW          RA, 14 (SP)
    LW          S0, 10 (SP)
    CLEAR       V0
    JR          RA
    ADDIU       SP, SP, 18
}